<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gavin Stone&#39;s Blog</title>
    <link>https://troub1emaker0911.github.io/</link>
    <description>Recent content on Gavin Stone&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <managingEditor>xialiaoliao0911@gmail.com (Gavin Stone)</managingEditor>
    <webMaster>xialiaoliao0911@gmail.com (Gavin Stone)</webMaster>
    <copyright>(c) 2020 Gavin Stone.</copyright>
    <lastBuildDate>Tue, 19 May 2020 15:26:43 +0800</lastBuildDate>
    
	<atom:link href="https://troub1emaker0911.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>24个经典的MySQL索引问题，你都遇到过哪些？</title>
      <link>https://troub1emaker0911.github.io/2020/05/23/24%E4%B8%AA%E7%BB%8F%E5%85%B8%E7%9A%84mysql%E7%B4%A2%E5%BC%95%E9%97%AE%E9%A2%98%E4%BD%A0%E9%83%BD%E9%81%87%E5%88%B0%E8%BF%87%E5%93%AA%E4%BA%9B/</link>
      <pubDate>Sat, 23 May 2020 00:49:34 +0800</pubDate>
      <author>xialiaoliao0911@gmail.com (Gavin Stone)</author>
      <guid>https://troub1emaker0911.github.io/2020/05/23/24%E4%B8%AA%E7%BB%8F%E5%85%B8%E7%9A%84mysql%E7%B4%A2%E5%BC%95%E9%97%AE%E9%A2%98%E4%BD%A0%E9%83%BD%E9%81%87%E5%88%B0%E8%BF%87%E5%93%AA%E4%BA%9B/</guid>
      <description>索引 1、什么是索引？
2、索引有哪些优缺点？
3、索引使用场景（重点）
4、索引有哪几种类型？
5、索引的数据结构（b树，hash）
6、索引的基本原理
7、索引算法有哪些？
8、索引设计的原则？
9、创建索引的原则（重中之重）
10、创建索引的三种方式，删除索引
11、创建索引时需要注意什么？
12、使用索引查询一定能提高查询的性能吗？为什么
13、百万级别或以上的数据如何删除
14、前缀索引
15、什么是最左前缀原则？什么是最左匹配原则
16、B树和B+树的区别
17、使用B树的好处
18、使用B+树的好处
19、Hash索引和B+树所有有什么区别或者说优劣呢?
20、数据库为什么使用B+树而不是B树
21、B+树在满足聚簇索引和覆盖索引的时候不需要回表查询数据，
22、什么是聚簇索引？何时使用聚簇索引与非聚簇索引
23、非聚簇索引一定会回表查询吗？
24、联合索引是什么？为什么需要注意联合索引中的顺序？
1、什么是索引？ 索引是一种特殊的文件(InnoDB数据表上的索引是表空间的一个组成部分)，它们包含着对数据表里所有记录的引用指针。
索引是一种数据结构。数据库索引，是数据库管理系统中一个排序的数据结构，以协助快速查询、更新数据库表中数据。索引的实现通常使用B树及其变种B+树。
更通俗的说，索引就相当于目录。为了方便查找书中的内容，通过对内容建立索引形成目录。索引是一个文件，它是要占据物理空间的。
2、索引有哪些优缺点？ 索引的优点
（1）可以大大加快数据的检索速度，这也是创建索引的最主要的原因。
（2）通过使用索引，可以在查询的过程中，使用优化隐藏器，提高系统的性能。
索引的缺点
（1）时间方面：创建索引和维护索引要耗费时间，具体地，当对表中的数据进行增加、删除和修改的时候，索引也要动态的维护，会降低增/改/删的执行效率；
（2）空间方面：索引需要占物理空间。
3、索引使用场景（重点） where
上图中，根据id查询记录，因为id字段仅建立了主键索引，因此此SQL执行可选的索引只有主键索引，如果有多个，最终会选一个较优的作为检索的依据。
-- 增加一个没有建立索引的字段altertable innodb1 add sex char(1);-- 按sex检索时可选的索引为nullEXPLAINSELECT*from innodb1 where sex=&#39;男&#39;; 可以尝试在一个字段未建立索引时，根据该字段查询的效率，然后对该字段建立索引（alter table 表名 add index(字段名)），同样的SQL执行的效率，你会发现查询效率会有明显的提升（数据量越大越明显）。
 order by
当我们使用order by将查询结果按照某个字段排序时，如果该字段没有建立索引，那么执行计划会将查询出的所有数据使用外部排序（将数据从硬盘分批读取到内存使用内部排序，最后合并排序结果），这个操作是很影响性能的，因为需要将查询涉及到的所有数据从磁盘中读到内存（如果单条数据过大或者数据量过多都会降低效率），更无论读到内存之后的排序了。
但是如果我们对该字段建立索引alter table 表名 add index(字段名)，那么由于索引本身是有序的，因此直接按照索引的顺序和映射关系逐条取出数据即可。而且如果分页的，那么只用取出索引表某个范围内的索引对应的数据，而不用像上述那取出所有数据进行排序再返回某个范围内的数据。（从磁盘取数据是最影响性能的）
join
 对join语句匹配关系（on）涉及的字段建立索引能够提高效率</description>
    </item>
    
    <item>
      <title>友情链接</title>
      <link>https://troub1emaker0911.github.io/links/</link>
      <pubDate>Tue, 19 May 2020 15:26:43 +0800</pubDate>
      <author>xialiaoliao0911@gmail.com (Gavin Stone)</author>
      <guid>https://troub1emaker0911.github.io/links/</guid>
      <description> [个人站点]
 我的博客园 https://www.cnblogs.com/xialiaoliao0911/   [工具站点]
 Markdown教程 https://www.runoob.com/markdown/md-block.html 廖雪峰 https://www.liaoxuefeng.com/ Hugo-handbook https://jimmysong.io/hugo-handbook/   [云原生Cloud Native]
 Kubernetes Handbook https://jimmysong.io/kubernetes-handbook/ Istio Handbook https://www.servicemesher.com/istio-handbook/ Kubernetes中文社区 http://docs.kubernetes.org.cn/ 云原生社区 https://cloudnative.to/   [分布式存储]
 GlusterFS分布式存储 https://www.cnblogs.com/huangyanqi/p/8406534.html   [网络与安全]
 iptables防火墙原理 http://www.zsythink.net/archives/1199  </description>
    </item>
    
    <item>
      <title>Project1</title>
      <link>https://troub1emaker0911.github.io/project1/</link>
      <pubDate>Tue, 19 May 2020 15:15:51 +0800</pubDate>
      <author>xialiaoliao0911@gmail.com (Gavin Stone)</author>
      <guid>https://troub1emaker0911.github.io/project1/</guid>
      <description>This is a test file </description>
    </item>
    
    <item>
      <title>授权说明</title>
      <link>https://troub1emaker0911.github.io/license/</link>
      <pubDate>Tue, 19 May 2020 14:27:32 +0800</pubDate>
      <author>xialiaoliao0911@gmail.com (Gavin Stone)</author>
      <guid>https://troub1emaker0911.github.io/license/</guid>
      <description> 本网站基于hugo构建； 本网站所有文章均由本人撰写，版权归Gavin Stone所有；  </description>
    </item>
    
    <item>
      <title>Kubernetes初探</title>
      <link>https://troub1emaker0911.github.io/2020/05/17/kubernetes%E5%88%9D%E6%8E%A2/</link>
      <pubDate>Sun, 17 May 2020 23:38:34 +0800</pubDate>
      <author>xialiaoliao0911@gmail.com (Gavin Stone)</author>
      <guid>https://troub1emaker0911.github.io/2020/05/17/kubernetes%E5%88%9D%E6%8E%A2/</guid>
      <description>Kubernetes主要由以下几个核心组件组成：  etcd保存了整个集群的状态； apiserver提供了资源操作的唯一入口，并提供认证、授权、访问控制、API注册和发现等机制； controller manager负责维护集群的状态，比如故障检测、自动扩展、滚动更新等； scheduler负责资源的调度，按照预定的调度策略将Pod调度到相应的机器上； kubelet负责维护容器的生命周期，同时也负责Volume（CSI）和网络（CNI）的管理； Container runtime负责镜像管理以及Pod和容器的真正运行（CRI）； kube-proxy负责为Service提供cluster内部的服务发现和负载均衡;
除了核心组件，还有一些推荐的插件，其中有的已经成为CNCF中的托管项目： CoreDNS负责为整个集群提供DNS服务 Ingress Controller为服务提供外网入口 Prometheus提供资源监控 Dashboard提供GUI Federation提供跨可用区的集群  </description>
    </item>
    
    <item>
      <title>如何使用hugo搭建一个个人博客？</title>
      <link>https://troub1emaker0911.github.io/2020/05/17/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Sun, 17 May 2020 19:02:00 +0800</pubDate>
      <author>xialiaoliao0911@gmail.com (Gavin Stone)</author>
      <guid>https://troub1emaker0911.github.io/2020/05/17/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>1.下载二进制安装包文件
Hugo二进制下载地址：https://github.com/spf13/hugo/releases
2.解压安装包
cd /usr/local mkdir hugo cd hugo tar -xf hugo_0.70.0_Linux-64bit.tar.gz 3.创建网站
cd /usr/local/hugo ./hugo new site 然后hugo会自动生成这样一个目录结构：
 ▸ archetypes/ ▸ content/ ▸ layouts/ ▸ static/ config.toml 4.下载主题
$ cd /usr/local/hugo/site $ cd themes $ git clone https://github.com/enten/hyde-y 5.修改配置文件
1)切换目录
cd /usr/local/hugo/site 2)修改配置文件config.toml
[root@gavin site]# more config.toml # hostname (and path) to the root eg. http://spf13.com/ baseurl = &amp;quot;https://troub1emaker0911.github.io&amp;quot; # Site title title = &amp;quot;Gavin Stone&#39;s Blog&amp;quot; # Copyright copyright = &amp;quot;(c) 2020 Gavin Stone.</description>
    </item>
    
    <item>
      <title>关于我</title>
      <link>https://troub1emaker0911.github.io/about/</link>
      <pubDate>Tue, 12 May 2020 23:49:31 +0800</pubDate>
      <author>xialiaoliao0911@gmail.com (Gavin Stone)</author>
      <guid>https://troub1emaker0911.github.io/about/</guid>
      <description> 我的技能  基础知识： Linux、Shell 服务器监控： Zabbix、Open-Falcon、Grafana、Prometheus 虚拟化服务： VMWare、Docker、Kubernetes、flannel 数据库服务：MySQL、Oracle、Redis、MySQL router、mycat 开源组件：nginx、HAproxy、keepalived、tomcat、LVS 自动化工具：Jenkins、Git、Ansible、Pipeline、Groovy 日志收集：ELK、Flume 大数据组件：Zookeeper、Spark、Kafka、RabbitMQ 地理信息服务： ArcGIS、ArcDesktop  生活中的我  喜欢美剧、听日语歌、看番、王者荣耀 性格偏内向，非主动型  相关链接  我的名字 Gavin Stone 我的Github https://github.com/troub1emaker0911 我的邮箱 xialiaoliao0911@gmail.com  </description>
    </item>
    
  </channel>
</rss>